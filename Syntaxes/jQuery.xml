<?xml version="1.0" encoding="UTF-8"?>
<!--
@author Derek Reynolds <derekr@me.com>
@version beta 1
@copyright MIT License 2009
-->
<syntax name="js.jQuery">
	<zones>
		<zone name="identifier.jQuery.object.selector">
			<starts-with>
				<expression>(\$|jQuery)(\()</expression>
				<capture number="1" name="operator.jQuery.object"/>
				<capture number="2" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="functions"/>
				<include syntax="language-root.js" collection="operators"/>
				<include syntax="language-root.js" collection="variables"/>
				<include collection="delimiter.jQuery"/>
				<include collection="literal.string"/>
			</subzones>
		</zone>
		<zone name="identifier.jQuery.ajax.function">
			<starts-with>
				<expression>(\.)(serialize(Array)?)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="4" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.ajax.function">
			<starts-with>
				<expression>(((\$)(\.)(ajax(Prefilter|Setup)?|get(JSON|Script)?|param|post))|((\.)(ajax(Complete|Error|Send|Stop|Success)+|load)))(\()</expression>
				<capture number="3" name="operator.jQuery.object"/>
				<capture number="4" name="delimiter.js.period"/>
				<capture number="5" name="function.name"/>
				<capture number="9" name="delimiter.js.period"/>
				<capture number="10" name="function.name"/>
				<capture number="12" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="functions"/>
				<include syntax="language-root.js" collection="operators"/>
				<include syntax="language-root.js" collection="strings"/>
				<include syntax="language-root.js" collection="variables"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<zone name="identifier.jQuery.attributes.function">
			<starts-with>
				<expression>(\.)((add|has)+Class|attr|html|prop|remove(Attr|Prop)+|val)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="5" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include collection="delimiter.jQuery"/>
				<include collection="literal.string"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.attributes.function">
			<expression>(\.)((toggle|remove)+Class)</expression>
			<capture number="1" name="delimiter.js.period"/>
			<capture number="2" name="function.name"/>
		</zone>
		<zone name="identifier.jQuery.callbacks.function">
			<starts-with>
				<expression>(\$)(\.)(Callbacks)(\()</expression>
				<capture number="1" name="operator.jQuery.object"/>
				<capture number="2" name="delimiter.js.period"/>
				<capture number="3" name="function.name"/>
				<capture number="4" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="strings"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<zone name="identifier.jQuery.callbacks.object">
			<starts-with>
				<expression>(callbacks)(\.)(add|disable|empty|fire|fired|fireWith|has|lock|locked|remove)(\()</expression>
				<capture number="1" name="variable"/>
				<capture number="2" name="delimiter.js.period"/>
				<capture number="3" name="function.name"/>
				<capture number="4" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js"/>
			</subzones>
		</zone>
		<zone name="identifier.jQuery.core.function">
			<starts-with>
				<expression>(\$)(\.)(holdReady|noConflict|sub)(\()</expression>
				<capture number="1" name="operator.jQuery.object"/>
				<capture number="2" name="delimiter.js.period"/>
				<capture number="3" name="function.name"/>
				<capture number="4" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="strings"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.core.function">
			<expression>(\$)(\.)(when)</expression>
			<capture number="1" name="operator.jQuery.object"/>
			<capture number="2" name="delimiter.js.period"/>
			<capture number="3" name="function.name"/>
		</zone>
		<zone name="identifier.jQuery-hook.css.function">
			<expression>(\$)(\.)(cssHooks)</expression>
			<capture number="1" name="operator.jQuery.object"/>
			<capture number="2" name="delimiter.js.period"/>
			<capture number="3" name="function.name"/>
		</zone>
		<zone name="identifier.jQuery.css.function">
			<starts-with>
				<expression>(\.)((inner|outer)(Width|Height)|position|scroll(Left|Top)+)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="6" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="strings"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.css.function">
			<expression>(\.)(css|height|offset|scroll(Left|Top)+)</expression>
			<capture number="1" name="delimiter.js.period"/>
			<capture number="2" name="function.name"/>
		</zone>
		<zone name="identifier.jQuery.data.function">
			<starts-with>
				<expression>(((\$)(\.)(data|dequeue|hasData))|((\.)(clearQueue|data|dequeue)))(\()</expression>
				<capture number="3" name="operator.jQuery.object"/>
				<capture number="4" name="delimiter.js.period"/>
				<capture number="5" name="function.name"/>
				<capture number="7" name="delimiter.js.period"/>
				<capture number="8" name="function.name"/>
				<capture number="9" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js"/>
				<include collection="delimiter.jQuery"/>
				<include collection="literal.string"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.data.function">
			<expression>(((\$)(\.)(queue))|((\.)(queue|removeData)))</expression>
			<capture number="3" name="operator.jQuery.object"/>
			<capture number="4" name="delimiter.js.period"/>
			<capture number="5" name="function.name"/>
			<capture number="7" name="delimiter.js.period"/>
			<capture number="8" name="function.name"/>
		</zone>
		<zone name="identifier.jQuery.deffered.function">
			<starts-with>
				<expression>(\.)(done|fail|is(Rejected|Resolved)+|notify(With)?|pipe|progress|reject(With)?|resolve(With)?|state|then|promise)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="7" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="strings"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<zone name="identifier.jQuery.effects.function">
			<starts-with>
				<expression>(\.)(delay|stop)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="4" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="strings"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.effects.function">
			<expression>(((\$)(\.)(fx\.(interval|off)+))|((\.)(animate|fade(In|Out|To|Toggle)+|hide|show|slide(Down|Toggle|Up)+|toggle)))(\()</expression>
			<capture number="3" name="operator.jQuery.object"/>
			<capture number="4" name="delimiter.js.period"/>
			<capture number="5" name="function.name"/>
			<capture number="8" name="delimiter.js.period"/>
			<capture number="9" name="function.name"/>
		</zone>
		<zone name="identifier.jQuery.events.function">
			<starts-with>
				<expression>(\.)(triggerHandler)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="3" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="strings"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.events.function">
			<expression>(((\$)(\.)(proxy))|((\.)((un)?bind|blur|change|click|dblclick|(un)?delegate|die|error|focus(in|out)?|hover|key(down|press|up)+|live|(un)?load|mouse(down|enter|leave|move|out|over|up)+|off|on|one|ready|resize|scroll|select|submit|toggle|trigger)))(\()</expression>
			<capture number="3" name="operator.jQuery.object"/>
			<capture number="4" name="delimiter.js.period"/>
			<capture number="5" name="function.name"/>
			<capture number="7" name="delimiter.js.period"/>
			<capture number="8" name="function.name"/>
			<capture number="15" name="delimiter.js.parenthesis.open"/>
		</zone>
		<zone name="identifier.jQuery.event.object">
			<expression>(event)(\.)(currentTarget|data|is(DefaultPrevented|PropagationStopped)?|namespace|page(X|Y)?|preventDefault|relatedTarget|result|stop(ImmediatePropagation|Propagation)?|target|timeStamp|type|which)</expression>
			<capture number="1" name="variable"/>
			<capture number="2" name="delimiter.js.period"/>
			<capture number="3" name="jQuery.event"/>
		</zone>
		<zone name="identifier.jQuery.internals.object">
			<expression>(((\$)(\.)(error))|((\.)(context|jquery)))</expression>
			<capture number="3" name="operator.jQuery.object"/>
			<capture number="4" name="delimiter.js.period"/>
			<capture number="5" name="jQuery.object"/>
			<capture number="7" name="delimiter.js.period"/>
			<capture number="8" name="jQuery.object"/>
		</zone>
		<zone name="identifier.jQuery.internals.function">
			<starts-with>
				<expression>(\.)(pushStack)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="3" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js"/>
				<include collection="delimiter.jQuery"/>
				<include collection="literal.string"/>
			</subzones>
		</zone>
		<zone name="identifier.jQuery.manipulation.function">
			<starts-with>
				<expression>(\.)(appendTo|clone|detach|empty|insert(After|Before)+|prependTo|remove|replaceAll|unwrap|wrapAll)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="4" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js"/>
				<include collection="delimiter.jQuery"/>
				<include collection="literal.string"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.manipulation.function">
			<expression>(\.)(after|append|before|prepend|replaceWith|wrap(Inner)?)(\()</expression>
			<capture number="1" name="delimiter.js.period"/>
			<capture number="2" name="function.name"/>
			<capture number="5" name="delimiter.js.parenthesis.open"/>
		</zone>
		<zone name="identifier.jQuery.miscellaneous.function">
			<starts-with>
				<expression>(\.)(get|index|size|toArray)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="3" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js"/>
				<include collection="delimiter.jQuery"/>
				<include collection="literal.string"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.miscellaneous.function">
			<expression>(\.)(each)</expression>
			<capture number="1" name="delimiter.js.period"/>
			<capture number="2" name="function.name"/>
		</zone>
		<zone name="identifier.jQuery.offset.function">
			<starts-with>
				<expression>(\.)(offsetParent)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="3" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="strings"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<zone name="identifier.jQuery.properties.object">
			<expression>(((\$)(\.)(browser|support))|((\.)(length)))</expression>
			<capture number="1" name="operator.jQuery.object"/>
			<capture number="2" name="delimiter.js.period"/>
			<capture number="3" name="jQuery.object"/>
			<capture number="7" name="delimiter.js.period"/>
			<capture number="6" name="jQuery.object"/>
			<subzones>
				<include syntax="language-root.js" collection="strings"/>
			</subzones>
		</zone>
		<zone name="identifier.jQuery.traversing.function">
			<starts-with>
				<expression>(\.)(add|andSelf|children|closest|contents|end|eq|find|first|has|last|next(All|Until)?|parent(s|sUntil)?|prev(All|Until)?|siblings|slice)(\()</expression>
				<capture number="1" name="delimiter.js.period"/>
				<capture number="2" name="function.name"/>
				<capture number="6" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js"/>
				<include collection="delimiter.jQuery"/>
				<include collection="literal.string"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.traversing.function">
			<expression>(\.)(filter|is|map|not)(\()</expression>
			<capture number="1" name="delimiter.js.period"/>
			<capture number="2" name="function.name"/>
			<capture number="3" name="delimiter.js.parenthesis.open"/>
		</zone>
		<zone name="identifier.jQuery.utilities.function">
			<starts-with>
				<expression>(\$)(\.)(contains|extend|globalEval|(in|make)+Array|is(Array|EmptyObject|Function|Numeric|PlainObject|Window|XMLDoc)+|merge|now|parse(JSON|XML)+|trim|type|unique)(\()</expression>
				<capture number="1" name="operator.jQuery.object"/>
				<capture number="2" name="delimiter.js.period"/>
				<capture number="3" name="function.name"/>
				<capture number="7" name="delimiter.js.parenthesis.open"/>
			</starts-with>
			<ends-with>
				<expression>\)</expression>
				<capture number="0" name="delimiter.js.parenthesis.close"/>
			</ends-with>
			<subzones>
				<include syntax="self"/>
				<include syntax="language-root.js" collection="strings"/>
				<include collection="delimiter.jQuery"/>
			</subzones>
		</zone>
		<!-- callbacks -->
		<zone name="identifier.jQuery.utilities.function">
			<expression>(\$)(\.)(each|grep|map)</expression>
			<capture number="1" name="operator.jQuery.object"/>
			<capture number="2" name="delimiter.js.period"/>
			<capture number="3" name="function.name"/>
		</zone>
		<zone name="identifier.jQuery.utilities.object">
			<expression>(\$)(\.)(boxModel|browser|support)</expression>
			<capture number="1" name="operator.jQuery.object"/>
			<capture number="2" name="delimiter.js.period"/>
			<capture number="3" name="jQuery.object"/>
		</zone>
	</zones>
	<library>
		<collection name="delimiter.jQuery">
			<zone name="delimiter.jQuery.comma">
				<expression>,</expression>
			</zone>
			<zone name="delimiter.jQuery.curly-brace.open">
				<expression>{</expression>
			</zone>
			<zone name="delimiter.jQuery.curly-brace.close">
				<expression>}</expression>
			</zone>
		</collection>
		<collection name="selectors.jQuery">
			<zone name="operator.selector.jQuery.id">
				<expression>(#)([a-zA-Z-_0-9]*)</expression>
				<capture number="1" name="operator.hash"/>
				<capture number="2" name="id.name"/>
			</zone>
			<zone name="operator.selector.jQuery.class">
				<expression>(\.)([a-zA-Z-_0-9]*)</expression>
				<capture number="1" name="operator.hash"/>
				<capture number="2" name="class.name"/>
			</zone>
			<zone name="operator.selector.jQuery.child">
				<expression>\&gt;</expression>
			</zone>
			<zone name="operator.selector.jQuery.next">
				<expression>\+</expression>
			</zone>
			<zone name="operator.selector.jQuery.sibling">
				<expression>\~</expression>
			</zone>
			<zone name="operator.selector.jQuery.child.filter.parameters">
				<starts-with>
					<expression>(:(nth-child)\()</expression>
					<capture number="2" name="filter.name"/>
				</starts-with>
				<ends-with>
					<expression>(\))</expression>
				</ends-with>
				<subzones>
					<include collection="selectors.jQuery"/>
				</subzones>
			</zone>
			<zone name="operator.selector.jQuery.child.filter">
				<expression>:((first|last|only)-child)</expression>
				<capture number="1" name="filter.name"/>
			</zone>
			<zone name="operator.selector.jQuery.basic.filter.parameters">
				<starts-with>
					<expression>(:(not|eq|gt|lt)\()</expression>
					<capture number="2" name="filter.name"/>
				</starts-with>
				<ends-with>
					<expression>(\))</expression>
				</ends-with>
				<subzones>
					<include collection="selectors.jQuery"/>
				</subzones>
			</zone>
			<zone name="operator.selector.jQuery.basic.filter">
				<expression>:(first|last|even|odd|header|animated)</expression>
				<capture number="1" name="filter.name"/>
			</zone>
			<zone name="operator.selector.jQuery.content.filter.parameters">
				<starts-with>
					<expression>(:(contains|has)\()</expression>
					<capture number="2" name="filter.name"/>
				</starts-with>
				<ends-with>
					<expression>(\))</expression>
				</ends-with>
				<subzones>
					<include collection="selectors.jQuery"/>
				</subzones>
			</zone>
			<zone name="operator.selector.jQuery.content.filter">
				<expression>:(empty|parent)</expression>
				<capture number="1" name="filter.name"/>
			</zone>
			<zone name="operator.selector.jQuery.visibility.filter">
				<expression>:(hidden|visible)</expression>
				<capture number="1" name="filter.name"/>
			</zone>
			<zone name="operator.selector.jQuery.form.filter">
				<expression>:(input|text|password|radio|checkbox|submit|image|reset|button|file|hidden|enabled|disabled|checked|selected)</expression>
				<capture number="1" name="filter.name"/>
			</zone>
			<zone name="operator.selector.jQuery.attribute.filter">
				<expression>(\[)([a-zA-Z]*)((\^)|(\$)|(\*))(=)([a-zA-Z0-9-_]*)(\])</expression>
				<capture number="1" name="delimiter.bracket.open"/>
				<capture number="2" name="attribute.name"/>
				<capture number="4" name="operator.starts-with"/>
				<capture number="5" name="operator.ends-with"/>
				<capture number="6" name="operator.contains"/>
				<capture number="7" name="operator.equals"/>
				<capture number="8" name="value"/>
				<capture number="9" name="delimiter.bracket.close"/>
			</zone>
			<zone name="operator.selector.jQuery.element">
				<expression>h[0-9]+|[a-zA-Z]+</expression>
				<capture number="0" name="element.name"/>
			</zone>
		</collection>

		<collection name="literal.string">
			<!--Methods (functions in objects)-->
			<!-- This is not strictly necessary for itemizers (they are covered by the x-assignment zone), but it makes the syntax coloring MUCH nicer when you can highlight every function name, regardless of where it lives relative to the function definition -->
			<zone>
				<expression>(?&lt;=^|,|\{)\s*(((')((?:[^']|\\')+?)((?&lt;!\\)'))\s*(:)\s*(function))\s*(\()</expression>
				<capture number="1" name="variable.property.function.definition.x-assignment"/>
				<capture number="2" name="string.quoted.single"/>
				<capture number="3" name="punctuation.definition.begin"/>
				<capture number="4" name="name">
					<subzones>
						<include collection="selectors.jQuery" />
						<include syntax="language-root.js" collection="character-escapes" />
					</subzones>
				</capture>
				<capture number="5" name="punctuation.definition.end"/>
				<capture number="6" name="operator.assignment"/>
				<capture number="7" name="keyword.storage.type"/>
				<capture number="8" name="punctuation.brace.round.open"/>
			</zone>
			<zone>
				<expression>(?&lt;=^|,|\{)\s*(((")((?:[^"]|\\")+?)((?&lt;!\\)"))\s*(:)\s*(function))\s*(\()</expression>
				<capture number="1" name="variable.property.function.definition.x-assignment"/>
				<capture number="2" name="string.quoted.double"/>
				<capture number="3" name="punctuation.definition.begin"/>
				<capture number="4" name="name">
					<subzones>
						<include collection="selectors.jQuery" />
						<include syntax="language-root.js" collection="character-escapes" />
					</subzones>
				</capture>
				<capture number="5" name="punctuation.definition.end"/>
				<capture number="6" name="operator.assignment"/>
				<capture number="7" name="keyword.storage.type"/>
				<capture number="8" name="punctuation.brace.round.open"/>
			</zone>
			<!--Properties (within object literals)-->
			<zone>
				<expression>(?&lt;=^|,|\{)\s*(((')((?:[^']|\\')+?)((?&lt;!\\)'))\s*(:))</expression>
				<capture number="1" name="variable.property.x-assignment"/>
				<capture number="2" name="string.quoted.single"/>
				<capture number="3" name="punctuation.definition.begin"/>
				<capture number="4" name="name">
					<subzones>
						<include collection="selectors.jQuery" />
						<include syntax="language-root.js" collection="character-escapes" />
					</subzones>
				</capture>
				<capture number="5" name="punctuation.definition.end"/>
				<capture number="6" name="operator.assignment"/>
			</zone>
			<!--Standard strings-->
			<zone name="string.quoted.single">
				<starts-with>
					<expression>'</expression>
					<capture number="0" name="punctuation.definition.begin"/>
				</starts-with>
				<ends-with>
					<expression>'</expression>
					<capture number="0" name="punctuation.definition.end"/>
				</ends-with>
				<subzones>
					<include collection="selectors.jQuery" />
					<include syntax="language-root.js" collection="character-escapes" />
				</subzones>
			</zone>
			<include collection="json-strings" />
		</collection>
		
		<collection name="json-strings">
			<zone>
				<expression>(?&lt;=^|,|\{)\s*(((")((?:[^"]|\\")+?)((?&lt;!\\)"))\s*(:))</expression>
				<capture number="1" name="variable.property.x-assignment"/>
				<capture number="2" name="string.quoted.double"/>
				<capture number="3" name="punctuation.definition.begin"/>
				<capture number="4" name="name">
					<subzones>
						<include collection="selectors.jQuery" />
						<include syntax="language-root.js" collection="character-escapes" />
					</subzones>
				</capture>
				<capture number="5" name="punctuation.definition.end"/>
				<capture number="6" name="operator.assignment"/>
			</zone>
			<zone name="string.quoted.double">
				<starts-with>
					<expression>"</expression>
					<capture number="0" name="punctuation.definition.begin"/>
				</starts-with>
				<ends-with>
					<expression>"</expression>
					<capture number="0" name="punctuation.definition.end"/>
				</ends-with>
				<subzones>
					<include collection="selectors.jQuery" />
					<include syntax="language-root.js" collection="character-escapes" />
				</subzones>
			</zone>
		</collection>
	</library>
</syntax>
